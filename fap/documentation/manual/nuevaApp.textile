h1. Creación de un nuevo proyecto

h2. Creación del proyecto holamundo

1. Crea un nuevo proyecto PLAY:

bc. play new holamundo

2. Accede a la carpeta del proyecto:

bc. cd holamundo

3. Sobreescribe las dependencias en el fichero "conf/dependencies.yml" (Nota: Cambia el número de versión por la última versión disponible del módulo):

bc. require:
    - play
    - fap -> fap 2.0
    - fap-modules -> guice 1.3
    - play -> pdf 0.6
    - play -> less 0.3
    - play -> recaptcha 1.2
    - play -> mockito 0.1
    - play -> webdrive 0.2:
        transitive: false
repositories:
    - Fap repository:
        type: http
        artifact: "http://fap-devel.etsii.ull.es/public/fap-sdk2/[revision]/[module]-[revision].zip"
        contains:
            - fap -> fap
    - fap-devel modules repository:
        type: http
        artifact: "http://fap-devel.etsii.ull.es/public/repo/[module]/[revision]/[module]-[revision].zip"
        contains:
            - fap-modules -> guice
            

4. Carga las dependencias del proyecto:

bc. play deps

6. Crea el esqueleto de la aplicación fap:

bc. play fap:init

8. Edita el fichero *app/led/Solicitud.fap* y añade un nuevo mensaje:

bc. Formulario Solicitud {
	Pagina Solicitante inicial {
		Wiki {"Hola Mundo!"}		
	}
}

9. Genera la aplicación. Este paso lo tendrás que repetir cada vez que modifiques algún fichero *.fap*. Puedes generar la aplicación mientras está arrancada. Actualiza la página en el navegador para ver los cambios reflejados. 

bc. play fap:generate

9. Para ejecutar la aplicación:

bc. play run

 
10. A partir de este momento tenemos la aplicación ejecutándose. Por defecto, la dirección es "http://localhost:9000":http://localhost:9000. El usuario por defecto es *admin* y la contraseña no se comprueba cuando se está en modo desarrollo. Crea una nueva solicitud e irás a la página con el mensaje que acabas de crear.

h2. Creación de un proyecto de forma automática

Otra manera de realizar la creación de un proyecto FAP, es utilizando un script creado para ello que automatiza los pasos anteriores de manera que el usuario sólo se preocupa de elegir el nombre de su proyecto.

Para obtener dicho script, nos bastará con descargarlo del siguiente enlace: "init-script":http://fap-devel.etsii.ull.es/public/fapInitScript/init-script.py

Su ejecución se realizará lanzando el script en python, pasándole como único argumento el nombre que queremos darle al proyecto FAP:

bc. > python init-script.py "holamundo"

Este script se encargará de:

1. Crear un proyecto play con el nombre pasado por parámetro.
2. Actualizar el fichero de dependencias.
3. Cargar las dependencias.
4. Crear el esqueleto de la aplicación FAP.
5. Genera la aplicación creada.

De esta forma, tendremos lista nuestra aplicación para lanzar, y ver lo que nos crea FAP sin tocar nada de nada, ejecutando un simple comando.

h2. Configuración de la base de datos

Por defecto, PLAY utiliza una base de datos en memoria. Para utilizar una base de datos MySQL debemos modificar el fichero de configuración *"conf/application.conf":application-conf*

Sustituye:

bc. db=mem

por

bc. db=mysql:user:password@schema


h2. Configuración de Eclipse

Para abrir el proyecto que acabamos de crear en Eclipse.

bc. play eclipsify
