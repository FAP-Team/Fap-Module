h1. Permisos

h2. Ámbito

Los permisos se podrán aplicar a páginas, grupos, forms, tablas, al menú (tanto a grupos como a elementos individuales). Los permisos que se aplican a las tablas sirven para filtrar las filas que van a aparecer al renderizarla. Para más información sobre cómo funcionan los permisos, "consultar esta página":curso-permisos.

h2. Sintaxis

h3. Variables por defecto

Para la definición de permisos se tendrán una serie de variables especiales.
*  **agente** : Agente conectado actualmente. Puede ser null.
*  **_accion** : Acción para la que se está consulta el permiso (leer, editar, crear, borrar).

h3. Varibles definidas por el usuario

Para la definición de los permisos se puede necesitar la consulta de valores de las entidades. Todas las entidades que necesitemos consultar las tenemos que declarar en la zona "vars:".
Para definirlas tenemos dos opciones:
* **Tipo nombreVariable** : Especificando únicamente el nombre de la entidad. Se consulta la variable que se ha pasado por parámetro. Bien sea el objeto o el identificador.
* **Tipo nombreVariable + consultaJPQL** : Podemos especificar una consulta sql que queramos realizar. Esto permite una mayor flexibilidad. 

h3. DSL

bc. Permiso rule_name {
	vars
		Tipo1 var1
		Tipo2 var2 : sql("Consulta sql...con parametros ?", var1);
		Tipo3 var3 : sql("Consulta sql...con parametros ?", var1, var2);
	when
		var1.campo = "valor" and
		var1.campo2 in ("valor1", "valor") or
		var2.campo = var1.campo and
		var1.campo != "valor" or var2.campo not in ("valor1", "valor2") ) and
		var3 != null
	return
		editable | visible | none
}

h4. Operaciones

* **=, !=** : Comprueba si un campo tiene, o no, un determinado valor.
* **in, not in**: Comprueba si un valor está, o no, dentro de una lista de valores.
* **= null, != null** : Comprueba si una variable es null.
* **and, or** : Concatenan reglas.

h2. Definición

bc. Permiso:
	elemento='Permiso' name=ID "{"
		('mensaje' '=' mensaje=STRING)?
		(varSection = PermisoVarsSection)?
		(
			("return" ret = PermisoReturn) 	
			|
			(
				whens += PermisoWhen+
				("else" "return" else=PermisoReturn)? 			
			)
		)
	"}"
;

h2. Ejemplos

bc. Permiso listaSolicitudes {
	vars
		Solicitud solicitud
		Participacion participacion : sql("select p from Participacion p where p.agente=? AND p.solicitud=?", agente, solicitud)
	when
		(_accion = leer and agente.rolActivo = "administrador")
		or
		(
			_accion = leer
			and 
			(participacion != null and agente.rolActivo.id = participacion.agente.id)
		)
	return editable
}

bc. Permiso resolucion {
	vars
		Resolucion resolucion
	when
	(
		_accion in (editar, crear) and
		(agente.rolActivo in ("administrador")) and
		resolucion.estado = "_20"
	)
	or
	(
		_accion = leer and
		(agente.rolActivo in ("gestor"))
	)
return
	editable
}

h2. Permisos avanzados

Si la definición de permisos no te permite realizar las comprobaciones que quieres hacer siempre puedes escribir código manual que compruebe los permisos. Puedes consultar cómo hacerlo en la sección "permisos":app-permisos.
