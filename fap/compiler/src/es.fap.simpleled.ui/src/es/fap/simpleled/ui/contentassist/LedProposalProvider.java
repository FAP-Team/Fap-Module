/*
 * generated by Xtext
 */
package es.fap.simpleled.ui.contentassist;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.jface.text.BadLocationException;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.jface.viewers.StyledString.Styler;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.graphics.TextStyle;
import org.eclipse.swt.widgets.Display;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import es.fap.simpleled.led.*;
import es.fap.simpleled.led.impl.LedFactoryImpl;
import es.fap.simpleled.led.util.LedCampoUtils;
import es.fap.simpleled.led.util.LedEntidadUtils;
import es.fap.simpleled.led.util.ModelUtils;
import es.fap.simpleled.led.util.Proposal;
import es.fap.simpleled.validation.*;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class LedProposalProvider extends AbstractLedProposalProvider {

	public int getCurrentLine(ContentAssistContext context){
		try {
			return context.getViewer().getDocument().getLineOfOffset(context.getOffset()) + 1;
		} catch (BadLocationException e) {
			return 0;
		}
	}
	
	@Override
	public void completeKeyword(Keyword keyword, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		String value = keyword.getValue();
		if (value.equals(".") || value.equals("agente") || value.equals(context.getPrefix())){
			return;
		}
		if (value.equals("(") || value.equals(")") || value.equals("!")){
			acceptor.accept(createCompletionProposal(value, context));
			return;
		}
		if (value.equals("accion")){
			acceptor.accept(createCompletionProposal(value, styledProposal(value + "  -  " + "(leer, editar, crear, borrar)", null), null, context));
			return;
		}
		char first = value.charAt(0);
		EObject semantic = context.getCurrentModel();
		String lastKeyword = "";
		if (context.getLastCompleteNode().getGrammarElement() instanceof Keyword){
			lastKeyword = ((Keyword)context.getLastCompleteNode().getGrammarElement()).getValue();
		}
		if (value.equals("}") || (Character.isLetter(first) && first == Character.toUpperCase(first) && !lastKeyword.equals("<"))){
			if (getCurrentLine(context) == context.getLastCompleteNode().getStartLine()){
				return;
			}
		}
		if (Character.isLetter(first) && first != Character.toUpperCase(first)){
			if (getCurrentLine(context) != context.getLastCompleteNode().getStartLine() && !(semantic instanceof Tabla)){
				return;
			}
		}
		super.completeKeyword(keyword, context, acceptor);
	}
	
	@Override
	public void completeListaAtributos_Atributos(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		Tabla tab = null;
		if (model instanceof ListaAtributos){
		   ListaAtributos lA = (ListaAtributos)model;
		   tab = (Tabla)lA.eContainer();
		}
		else if(model instanceof Tabla)
		   tab = (Tabla)model;
		LedElementValidator validator = LedElementValidator.getElementValidator(tab.getCampo());
		List <Attribute> atributos = LedCampoUtils.getUltimaEntidad(tab.getCampo()).getAttributes();
		for (Attribute attr: atributos){
			acceptor.accept(createCompletionProposal(attr.getName(), styledProposal(attr.getName() + "  -  " + validator.getType(attr), true), null, context));
		}
	}
	
	@Override
	public void completeCompoundType_Entidad(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		INode node = context.getLastCompleteNode();
		if (getCurrentLine(context) == node.getStartLine() && !(node.getSemanticElement().eContainer() instanceof CompoundType)){
			return;
		}
		for (Entity entidad: ModelUtils.<Entity>getVisibleNodes(LedPackage.Literals.ENTITY, model.eResource())){
			acceptor.accept(createCompletionProposal(entidad.getName(), styledProposal(entidad.getName() + "  -  " + "Entidad", null), null, 0, context.getPrefix(), context));
		}
	}
	
	@Override
	public void completeCampo_Entidad(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		Campo campo = LedCampoUtils.getCampo(model);
		LedElementValidator validator = LedElementValidator.getElementValidator(campo);
		if (validator != null) {
			for (Proposal proposal: validator.completeEntidades(context.getPrefix(), LedEntidadUtils.eliminaSolicitudGenerica(LedCampoUtils.getEntidadesValidas(campo)).values())) {
				acceptor.accept(createCompletionProposal(proposal.getEditorText(), styledProposal(proposal.text, proposal.valid), null, context));
			}
		}
		else{
			super.completeCampo_Entidad(model, assignment, context, acceptor);
		}
	}
	
	@Override
	public void completeCampoAtributos_Atributo(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		CampoAtributos atributos = (CampoAtributos) model;
		Campo campo = LedCampoUtils.getCampoContainer(atributos);
		Entity entidad = null;
		if (atributos.eContainer() instanceof Campo){
			entidad = ((Campo) atributos.eContainer()).getEntidad();
		}
		else{
			Attribute attr = ((CampoAtributos)atributos.eContainer()).getAtributo();
			boolean esPagina = LedCampoUtils.getCampoContainer(atributos).eContainer() instanceof Pagina;
			boolean esPopup = LedCampoUtils.getCampoContainer(atributos).eContainer() instanceof Popup;
			if (LedEntidadUtils.xToOne(attr) || ((esPagina || esPopup) && LedEntidadUtils.isReferencia(attr))){
				entidad = LedEntidadUtils.getEntidad(attr);
			}
		}
		if (entidad == null){
			return;
		}
		LedElementValidator validator = LedElementValidator.getElementValidator(campo);
		if (validator != null){
			for (Proposal proposal: validator.completeEntidad(context.getPrefix(), entidad, "")) {
				acceptor.accept(createCompletionProposal(proposal.getEditorText(), styledProposal(proposal.text, proposal.valid), null, context));
			}
		}
		else{
			super.completeCampoAtributos_Atributo(atributos, assignment, context, acceptor);
		}
	}

	@Override
	public void completeCampoPermiso_Variable(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
	}
	
	@Override
	public void completeCampoPermiso_Action(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
	}
	
	@Override
	public void completeCampoPermiso_Agente(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
	}
	
	@Override
	public void complete_CampoPermiso(EObject model, RuleCall call, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		CampoPermisoValidator validator = new CampoPermisoValidator(model);
		for (Proposal proposal: validator.completeVariables(getPermisoVariables(model))) {
			acceptor.accept(createCompletionProposal(proposal.getEditorText(), styledProposal(proposal.text, proposal.valid), null, context));
		}
	}
	
	@Override
	public void completeCampoPermisoAtributos_Atributo(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		CampoPermisoAtributos atributos = (CampoPermisoAtributos) model;
		Entity entidad = null;
		if (atributos.eContainer() instanceof CampoPermiso){
			CampoPermiso perm = (CampoPermiso) atributos.eContainer();
			if (perm.isAction()){
				return;
			}
			if (perm.isAgente()){
				entidad = getAgente(model.eResource());
			}
			else{
				entidad = perm.getVariable().getTipo();
			}
		}
		else{
			Attribute attr = ((CampoPermisoAtributos)atributos.eContainer()).getAtributo();
			if (LedEntidadUtils.xToOne(attr)){
				entidad = LedEntidadUtils.getEntidad(attr);
			}
		}
		if (entidad == null){
			return;
		}
		CampoPermisoValidator validator = new CampoPermisoValidator(model);
		for (Proposal proposal: validator.completeEntidad(context.getPrefix(), entidad, "")) {
			acceptor.accept(createCompletionProposal(proposal.getEditorText(), styledProposal(proposal.text, proposal.valid), null, context));
		}
	}
	
	@Override
	public void completePermisoRuleCheck_PermisoGrafico(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		for (PermisoGrafico perm : ModelUtils.<PermisoGrafico>getVisibleNodes(LedPackage.Literals.PERMISO_GRAFICO, model.eResource()))
			acceptor.accept(createCompletionProposal(perm.getName(), styledProposal(perm.getName() + "  -  " + "Permiso gr√°fico", null), null, 0, context.getPrefix(), context));
	}
	
	@Override
	public void completePermisoRuleCheck_PermisoAcceso(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		for (PermisoAcceso perm : ModelUtils.<PermisoAcceso>getVisibleNodes(LedPackage.Literals.PERMISO_ACCESO, model.eResource()))
			acceptor.accept(createCompletionProposal(perm.getName(), styledProposal(perm.getName() + "  -  " + "Permiso acceso", null), null, 0, context.getPrefix(), context));
	}
	
	@Override
	public void completeTabla_Popup(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		Entity entidad = LedCampoUtils.getUltimaEntidad(((Tabla)model).getCampo());
		while (!(model instanceof Formulario))
			model = model.eContainer();
		Formulario actual = (Formulario) model;
		for (Formulario f : ModelUtils.<Formulario>getVisibleNodes(LedPackage.Literals.FORMULARIO, model.eResource())){
			for (Popup popup: f.getPopups()){
				if (LedEntidadUtils.equals(entidad, LedCampoUtils.getUltimaEntidad(popup.getCampo()))){
					if (f.getName().equals(actual.getName()))
						acceptor.accept(createCompletionProposal(popup.getName(), context));
					else
						acceptor.accept(createCompletionProposal(f.getName() + "." + popup.getName(), context));
				}
			}
		}
	}
	
	@Override
	public void completeTabla_Pagina(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		Entity entidad = LedCampoUtils.getUltimaEntidad(((Tabla)model).getCampo());
		while (!(model instanceof Formulario))
			model = model.eContainer();
		Formulario actual = (Formulario) model;
		for (Formulario f : ModelUtils.<Formulario>getVisibleNodes(LedPackage.Literals.FORMULARIO, model.eResource())){
			for (Pagina pagina: f.getPaginas()){
				if (LedEntidadUtils.equals(entidad, LedEntidadUtils.getEntidad(pagina))){
					if (f.getName().equals(actual.getName()))
						acceptor.accept(createCompletionProposal(pagina.getName(), context));
					else
						acceptor.accept(createCompletionProposal(f.getName() + "." + pagina.getName(), context));
				}
			}
		}
	}
	
	@Override
	public void completeTabla_PopupCrear(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Popup(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PopupLeer(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Popup(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PopupEditar(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Popup(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PopupBorrar(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Popup(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PaginaCrear(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Pagina(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PaginaLeer(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Pagina(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PaginaEditar(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Pagina(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeTabla_PaginaBorrar(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
		completeTabla_Pagina(model, assignment, context, acceptor);
	}
	
	public List<PermisoVar> getPermisoVariables(EObject model) {
		List<PermisoVar> variables = new ArrayList<PermisoVar>();
		while (! (model instanceof PermisoGrafico) && ! (model instanceof PermisoAcceso))
			model = model.eContainer();
		if (model instanceof PermisoGrafico){
			PermisoGrafico perm = (PermisoGrafico) model;
			if (perm.getVarSection() != null)
				variables.addAll(perm.getVarSection().getVars());
		}
		else if (model instanceof PermisoAcceso){
			PermisoAcceso perm = (PermisoAcceso) model;
			if (perm.getVarSection() != null)
				variables.addAll(perm.getVarSection().getVars());
		}
		Entity agente = getAgente(model.eResource());
		PermisoVar agenteVar = new LedFactoryImpl().createPermisoVar();
		agenteVar.setName("agente");
		agenteVar.setTipo(agente);
		variables.add(agenteVar);
		return variables;
	}
	
	private static Color color = new Color(Display.getCurrent(), 127, 127, 127);
	private static Color acceptedColor = new Color(Display.getCurrent(), 0, 120, 0);
	private static Color noAcceptedColor = new Color(Display.getCurrent(), 120, 0, 0);
	
	private static Styler styler = new Styler() {
		
		@Override
		public void applyStyles(TextStyle arg0) {
			arg0.foreground = color;
		}
	};
	
	private static Styler acceptedStyler = new Styler() {
		@Override
		public void applyStyles(TextStyle arg0) {
			arg0.foreground = acceptedColor;
		}
	};
	
	private static Styler noAcceptedStyler = new Styler() {
		@Override
		public void applyStyles(TextStyle arg0) {
			arg0.foreground = noAcceptedColor;
		}
	};
	
	private StyledString styledProposal(String proposal, Boolean accepted){
		StyledString styled = new StyledString(proposal);
		int index = proposal.indexOf("-");
		if (accepted != null){
			if (accepted){
				styled.setStyle(0, index, acceptedStyler);
			}
			else{
				styled.setStyle(0, index, noAcceptedStyler);
			}
		}
		styled.setStyle(index, proposal.length() - index, styler);
		return styled;
	}
	
	public Entity getAgente(Resource res) {
		for (Entity entidad : ModelUtils.<Entity>getVisibleNodes(LedPackage.Literals.ENTITY, "Agente", res))
			return entidad;
		return null;
	}
	
}
