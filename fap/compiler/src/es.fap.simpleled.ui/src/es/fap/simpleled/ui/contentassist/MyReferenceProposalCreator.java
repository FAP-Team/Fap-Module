/*
 * generated by Xtext
 */
package es.fap.simpleled.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.ui.editor.contentassist.AbstractJavaBasedContentProposalProvider;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.google.common.base.Function;
import com.google.common.base.Predicate;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class MyReferenceProposalCreator extends AbstractJavaBasedContentProposalProvider.ReferenceProposalCreator {

	public void lookupCrossReference(IScope scope, EObject model, EReference reference, ICompletionProposalAcceptor acceptor, Predicate<IEObjectDescription> filter, Function<IEObjectDescription, ICompletionProposal> proposalFactory) {
		super.lookupCrossReference(scope, model, reference, acceptor, filter, proposalFactory);

//		PENDIENTE IMPLEMENTAR LO SIGUIENTE, PARA MODIFICAR EL AUTOCOMPLETADO DE PAGINAS Y POPUPS Y ASI PODER INCLUIR
//		A LA DERECHA EL NOMBRE DEL FORMULARIO AL QUE PERTENECEN.
		
//		if (!"pagina".equals(reference.getName()) && !"popup".equals(reference.getName())){
//			super.lookupCrossReference(scope, model, reference, acceptor, filter, proposalFactory);
//			return;
//		}
//		Function<IEObjectDescription, ICompletionProposal> wrappedFactory = getWrappedFactory(model, reference, proposalFactory);
//		Iterable<IEObjectDescription> candidates = queryScope(scope, model, reference, filter);
//		for (IEObjectDescription candidate : candidates) {
//			if (!acceptor.canAcceptMoreProposals())
//				return;
//			if (filter.apply(candidate)) {
//				acceptor.accept(wrappedFactory.apply(candidate));
//			}
//		}
	}
	
}
