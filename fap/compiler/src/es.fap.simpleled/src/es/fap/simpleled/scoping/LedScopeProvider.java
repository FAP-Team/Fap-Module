/*
 * generated by Xtext
 */
package es.fap.simpleled.scoping;

import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

import es.fap.simpleled.led.Attribute;
import es.fap.simpleled.led.Campo;
import es.fap.simpleled.led.CampoAtributos;
import es.fap.simpleled.led.CompoundType;
import es.fap.simpleled.led.Entity;
import es.fap.simpleled.led.LedFactory;
import es.fap.simpleled.led.impl.LedFactoryImpl;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */

public class LedScopeProvider extends AbstractDeclarativeScopeProvider {
	
	public IScope scope_CampoAtributos_atributo(CampoAtributos atributos, EReference ref) {
		Entity entidad = null;
		if (atributos.eContainer() instanceof Campo){
			entidad = ((Campo) atributos.eContainer()).getEntidad();
		}
		else{
			Attribute attr = ((CampoAtributos)atributos.eContainer()).getAtributo();
			if (attr.getType().getCompound() != null){
				CompoundType c = attr.getType().getCompound();
				if (c.getTipoReferencia() == null || (!c.getTipoReferencia().equals("OneToMany") && !c.getTipoReferencia().equals("ManyToMany"))){
					entidad = attr.getType().getCompound().getEntidad();
				}
			}
		}
		EList<Attribute> attrs = new BasicEList<Attribute>();
		while(entidad != null){
			addId(entidad);
			for (Attribute at: entidad.getAttributes()){
				attrs.add(at);
			}
			entidad = entidad.getExtends();
		}
		return Scopes.scopeFor(attrs);
	}
	
	public static void addId(Entity entidad){
		Entity padre = entidad;
		while(entidad != null){
			for (Attribute attr: entidad.getAttributes()){
				if (attr.getName().equals("id")){
					return;
				}
			}
			entidad = entidad.getExtends();
			if (entidad != null){
				padre = entidad;
			}
		}
		LedFactory factory = new LedFactoryImpl();
		Attribute id = factory.createAttribute();
		id.setName("id");
		id.setType(factory.createType());
		id.getType().setSimple("Long");
		padre.getAttributes().add(id);
	}
	
}
