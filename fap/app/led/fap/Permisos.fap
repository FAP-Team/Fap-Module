// Permisos de administracion
PermisoAcceso administrador{
	when
		agente.rolActivo = "administrador"
	return all
}

PermisoGrafico administradorGr{
	when
		agente.rolActivo = "administrador"
	return editable
}

PermisoGrafico usuario{
	when
		agente.rolActivo = "usuario"
	return editable
}

PermisoGrafico noUsuario{
	when
		agente.rolActivo != "usuario"
	return editable
}
		
PermisoGrafico logeado{
	when 
		agente != null
	return editable
}
		
// Permisos de la pag presentacion
PermisoGrafico presentacionPrepararParaFirmar{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.registro.fasesRegistro.borrador = "false"
	return editable
	
	when
		agente.rolActivo in ("administrador", "usuario")
	return visible
}

PermisoGrafico presentacionModificar{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.registro.fasesRegistro.registro = "false"
	return editable
	
	else
	return visible		
}

PermisoGrafico presentacionObtenerBorrador{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.registro.fasesRegistro.borrador = "true"
	return editable
}

PermisoGrafico presentacionFirmar{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and 
		solicitud.registro.fasesRegistro.borrador = "true" and
		solicitud.registro.fasesRegistro.firmada= "false"
	return editable
	
	when
		agente.rolActivo in ("administrador", "usuario") and 
		solicitud.registro.fasesRegistro.borrador = "true"
	return visible
}

PermisoGrafico presentacionRegistrar{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.registro.fasesRegistro.firmada = "true" and
		(
			agente.rolActivo = "usuario" and
			solicitud.registro.fasesRegistro.registro = "false"
		) or
		(
			agente.rolActivo = "administrador" and
			solicitud.registro.fasesRegistro.clasificarAed = "false"
		)
	return editable

	when
		solicitud.registro.fasesRegistro.firmada = "true"
	return visible	
}

PermisoGrafico presentacionRecibo{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.registro.fasesRegistro.registro = "true"
	return editable	
}	

PermisoGrafico instruccion{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado = "iniciada"
	return editable		
}
	
PermisoAcceso solicitudPreparadaFirmarYPresentar{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador" and
		solicitud.registro.fasesRegistro.borrador = "true"
	return all
	
	when
		agente.rolActivo in ("administrador", "usuario")
	return {leer}
}

PermisoGrafico solicitudPreparadaFirmarYPresentarGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador" and
		solicitud.registro.fasesRegistro.borrador = "true"
	return editable
	
	when
		agente.rolActivo in ("administrador", "usuario")
	return visible
}

PermisoAcceso editableSiSolicitudIniciada{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado in ("Iniciada", "Requerida", "Requerida plazo vencido", "En verificación", "Pendiente requerimiento", "Excluido", "Plazo vencido", "Verificado")
	return all
}

PermisoGrafico editableSiSolicitudIniciadaGr{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado in ("Iniciada", "Requerida", "Requerida plazo vencido", "En verificación", "Pendiente requerimiento", "Excluido", "Plazo vencido", "Verificado")
	return editable
}

PermisoAcceso solicitudPreparadaFirmar{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador"  and
		solicitud.registro.fasesRegistro.borrador != null and
		solicitud.registro.fasesRegistro.borrador = "true"
	return all
	
	when
		agente.rolActivo in ("administrador", "usuario")
	return {leer}
}

PermisoGrafico solicitudPreparadaFirmarGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador"  and
		solicitud.registro.fasesRegistro.borrador != null and
		solicitud.registro.fasesRegistro.borrador = "true"
	return editable
	
	when
		agente.rolActivo in ("administrador", "usuario")
	return visible
}

PermisoAcceso solicitudPreparadaPresentar{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador" and
		solicitud.registro.fasesRegistro.borrador != null and
		solicitud.registro.fasesRegistro.borrador = "true" and
		solicitud.registro.fasesRegistro.firmada = "true"
	return all

	when
		agente.rolActivo in ("administrador", "usuario")
	return {leer}
}

PermisoGrafico solicitudPreparadaPresentarGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario") and
		solicitud.estado = "borrador" and
		solicitud.registro.fasesRegistro.borrador != null and
		solicitud.registro.fasesRegistro.borrador = "true" and
		solicitud.registro.fasesRegistro.firmada = "true"
	return editable

	when
		agente.rolActivo in ("administrador", "usuario")
	return visible
}

// Permiso que define las solicitudes que son visibles para el usuario
PermisoAcceso solicitudes{
	mensaje = "No tiene suficientes privilegios para acceder a esta solicitud"
	vars
		SolicitudGenerica solicitud
		Participacion participacion : sql("select p from Participacion p where p.agente=? AND p.solicitud=?", agente, solicitud)
	when
		agente.rolActivo in ("administdrador", "gestor", "revisor")
		or
		participacion != null 			
	return all
}

// Permiso que define las solicitudes que son visibles para el usuario
PermisoGrafico solicitudesGr{
	mensaje = "No tiene suficientes pridvilegios para acceder a esta solicitud"
	vars
		SolicitudGenerica solicitud
		Participacion participacion : sql("select p from Participacion p where p.agente=? AND p.solicitud=?", agente, solicitud)
	when
		agente.rolActivo in ("administrador", "gestor", "revisor")
		or
		participacion != null 			
	return editable
}

// Permisos pagina de presentacion

PermisoGrafico adminGestorRevisor{
	when
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return editable
}

PermisoAcceso aportacion{
	vars
		SolicitudGenerica solicitud
	when 
		agente.rolActivo in ("administrador", "usuario", "gestor", "revisor") and
		solicitud.estado in ("iniciada", "requerida", "verificado")
	return all
}

PermisoGrafico aportacionGr{
	vars
		SolicitudGenerica solicitud
	when 
		agente.rolActivo in ("administrador", "usuario", "gestor", "revisor") and
		solicitud.estado in ("iniciada", "requerida", "verificado")
	return editable
}

PermisoGrafico aportacionDocumentos{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "usuario", "gestor", "revisor") and
		solicitud.estado in ("iniciada", "requerida", "requerida plazo vencido")
	return editable
}

PermisoGrafico noEditableGr{
	return visible
}

PermisoAcceso noEditable{
	return {leer}
}


PermisoGrafico noVisibleUsuario{
	when
		usuario is visible
	return none
	else return editable
}

PermisoAcceso solicitudEnBorrador{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado = "borrador"	
	return all
}

PermisoGrafico solicitudEnBorradorGr{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado = "borrador"	
	return editable
}

PermisoAcceso editarSolicitud{
	vars
		SolicitudGenerica solicitud
	when
		!usuario is visible
		or (
	 		agente.rolActivo = "usuario" and
	 		solicitud.estado = "borrador" and
	 		solicitud.registro.fasesRegistro.borrador = "false"
		)
	return {editar leer}
	when
		!usuario is visible
		or (
	 		agente.rolActivo = "usuario" and
	 		solicitud.estado = "borrador"
		)
	return {leer}
}


PermisoAcceso participacionEnSolicitud {
	vars
		SolicitudGenerica solicitud
		Participacion participacion : sql("select p from Participacion p where p.agente=? AND p.solicitud=?", agente, solicitud)
	when
		participacion != null
	return all
}

PermisoGrafico participacionEnSolicitudGr {
	vars
		SolicitudGenerica solicitud
		Participacion participacion : sql("select p from Participacion p where p.agente=? AND p.solicitud=?", agente, solicitud)
	when
		participacion != null
	return editable
}

// Indica el permiso que se tiene sobre la solicitud
// 	+ Administrador: editable
// 	+ usuario con participación: editable
// 	+ resto: none
PermisoAcceso permisoSolicitud {
	vars
		SolicitudGenerica solicitud
	when
		administrador contains accion
	return all
	
	when
		participacionEnSolicitud contains accion
	return all
	
	else
	return {}
}

PermisoGrafico permisoSolicitudGr {
	vars
		SolicitudGenerica solicitud
	when
		administradorGr is _permiso
	return editable
	
	when
		participacionEnSolicitudGr is _permiso
	return editable
	
	else
	return none
}

// Este permiso lo tienen todas las páginas de la solicitud
// Controla que los datos no se puedan editar cuando la solicitud está preparada para registrar
PermisoAcceso solicitud {
	vars
		SolicitudGenerica solicitud
	when
		administrador contains accion
	return {editar}

	when
		participacionEnSolicitud contains accion and
	 	agente.rolActivo = "usuario" and
	 	solicitud.estado = "borrador" and
	 	solicitud.registro.fasesRegistro.borrador = "false"
	return {editar}
	
	when
		participacionEnSolicitud contains accion
	return {leer}
}

PermisoGrafico solicitudGr {
	vars
		SolicitudGenerica solicitud
	when
		administradorGr is _permiso
	return editable

	when
		participacionEnSolicitud contains accion and
	 	agente.rolActivo = "usuario" and
	 	solicitud.estado = "borrador" and
	 	solicitud.registro.fasesRegistro.borrador = "false"
	return editable
	
	when
		participacionEnSolicitud contains accion
	return visible
}

//	when
//		permisoSolicitud is _permiso
//	return
//		visible
//	
//	else
//	return none
//}
	
PermisoAcceso subirDocumentos{
	vars
		SolicitudGenerica solicitud
	when
		administrador contains accion
		or (
	 		solicitud.estado = "borrador" and
	 		solicitud.registro.fasesRegistro.borrador = "false"
		)
	return {crear}
}

PermisoAcceso visibleSiAccesoCertificado{
	when 
		agente.acceso = "certificado"
	return all
}

PermisoGrafico visibleSiAccesoCertificadoGr{
	when 
		agente.acceso = "certificado"
	return editable
}

PermisoAcceso visibleSiAccesoContrasena{
	when 
		agente.acceso = "usuario"
	return all
}

PermisoGrafico visibleSiAccesoContrasenaGr{
	when 
		agente.acceso = "usuario"
	return editable
}

PermisoAcceso documentoAutorizacionGenerado{
	vars 
		SolicitudGenerica solicitud
	when 
		solicitud.registro.autorizacionFuncionario.urlDescarga != null and
		agente.funcionario != "true"
	return all
}
	
PermisoGrafico documentoAutorizacionGeneradoGr{
	vars 
		SolicitudGenerica solicitud
	when 
		solicitud.registro.autorizacionFuncionario.urlDescarga != null and
		agente.funcionario != "true"
	return editable
}

PermisoAcceso visibleFuncionarioAutorizado{
	vars
		SolicitudGenerica solicitud
	when 
		agente.funcionario = "true" and
		solicitud.solicitante.autorizaFuncionario = "true"
	return all
}

PermisoGrafico visibleFuncionarioAutorizadoGr{
	vars
		SolicitudGenerica solicitud
	when 
		agente.funcionario = "true" and
		solicitud.solicitante.autorizaFuncionario = "true"
	return editable
}

PermisoAcceso noVisibleFuncionarioAutorizado{
	vars
		SolicitudGenerica solicitud
	when 
		agente.funcionario = "true" and
		solicitud.solicitante.autorizaFuncionario = "true"
	return all
}

PermisoGrafico noVisibleFuncionarioAutorizadoGr{
	vars
		SolicitudGenerica solicitud
	when 
		agente.funcionario = "true" and
		solicitud.solicitante.autorizaFuncionario = "true"
	return editable
}
	
///* Se puede moficicar la aportación de documentación cuando está en borrador*/	
PermisoGrafico aportacionModificar{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.aportaciones.actual.estado in ("borrador")
	return editable
}	
	
/*
  Cuando la firma y registro se quedo en un paso intermedio. Se le muestra un mensaje
  al usuario diciendole que hubo un problema, que pulse otra vez el problema para
  completar el registro 
*/	
PermisoGrafico aportacionMensajeIntermedio{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.aportaciones.actual.estado in ("firmada", "registrada", "clasificada", "finalizada")
	return editable
}
//	
///* 
// * Permisos de la pagina de presentacion
// */

PermisoAcceso mensajeVerificacion{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "requerida plazo vencido"
	return {leer}
}

PermisoGrafico mensajeVerificacionGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "requerida plazo vencido"
	return visible
}

PermisoAcceso iniciarVerificacion{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "iniciada"
	return all
}


PermisoGrafico iniciarVerificacionGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "iniciada"
	return editable
}

PermisoAcceso verificarDocumentos{
	vars
		SolicitudGenerica solicitud
		when
			agente.rolActivo in ("administrador", "gestor", "revisor") and
			solicitud.estado = "en verificacion"
		return all
		
		when
			agente.rolActivo in ("administrador", "gestor", "revisor") and
			solicitud.estado in ("requerida", "pendiente requerimiento", "requerida plazo vencido", "en verificacion")
		return {leer}
}

PermisoGrafico verificarDocumentosGr{
	vars
		SolicitudGenerica solicitud
		when
			agente.rolActivo in ("administrador", "gestor", "revisor") and
			solicitud.estado = "en verificacion"
		return editable
		
		when
			agente.rolActivo in ("administrador", "gestor", "revisor") and
			solicitud.estado in ("requerida", "pendiente requerimiento", "requerida plazo vencido", "en verificacion")
		return visible
}
	
PermisoAcceso verificacionRequerimientos{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado in ("en verificacion", "pendiente requerimiento", "requerida", "requerida plazo vencido", "verificada", "excluido", "plazo vencido")
	return all
}

PermisoGrafico verificacionRequerimientosGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado in ("en verificacion", "pendiente requerimiento", "requerida", "requerida plazo vencido", "verificada", "excluido", "plazo vencido")
	return editable
}

PermisoAcceso nuevoRequerimiento{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "pendiente requerimiento"
	return all
}

PermisoGrafico nuevoRequerimientoGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado = "pendiente requerimiento"
	return editable
}

PermisoAcceso firmarRequerimiento{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado = "pendiente requerimiento" and
		agente.rolActivo in ("administrador", "gestor")
	return all
	
	when
		solicitud.estado = "pendiente requerimiento"
		and
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return {leer}
}

PermisoGrafico firmarRequerimientoGr{
	vars
		SolicitudGenerica solicitud
	when
		solicitud.estado = "pendiente requerimiento" and
		agente.rolActivo in ("administrador", "gestor")
	return editable
	
	when
		solicitud.estado = "pendiente requerimiento"
		and
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return visible
}

PermisoAcceso finalizarRequerimiento{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado in ("requerida", "requerida plazo vencido")
	return all 
}

PermisoGrafico finalizarRequerimientoGr{
	vars
		SolicitudGenerica solicitud
	when
		agente.rolActivo in ("administrador", "gestor", "revisor") and
		solicitud.estado in ("requerida", "requerida plazo vencido")
	return editable 
}

	
PermisoGrafico aportacionNoNull{
	vars
		Documento doc
	when
		doc.uri = null
	return editable
}

PermisoAcceso nuevaSolicitud{
	vars
		Convocatoria convocatoria
	when
		convocatoria.estado = "presentacion"
	return all
}

//Baremación	
PermisoGrafico listaEvaluaciones{
	when
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return editable
}

PermisoAcceso evaluacion{
	when
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return all
}

PermisoGrafico evaluacionGr{
	when
		agente.rolActivo in ("administrador", "gestor", "revisor")
	return editable
}

PermisoAcceso tableKeyOnlyEstadosSolicitud{
	vars
		TableKeyValue tableKeyValue
	when
		tableKeyValue.table = "estadosSolicitud" and
		agente.rolActivo = "administrador"
	return all
}

PermisoGrafico tableKeyOnlyEstadosSolicitudGr{
	vars
		TableKeyValue tableKeyValue
	when
		tableKeyValue.table = "estadosSolicitud" and
		agente.rolActivo = "administrador"
	return editable
}

PermisoGrafico tableKeyOnlyEstadosSolicitudUsuario{
	vars
		TableKeyValue tableKeyValue
	when
		tableKeyValue.table = "estadosSolicitudUsuario" and
		agente.rolActivo = "administrador"
	return editable
}

// Editable administrador
// Visible para el usuario
PermisoAcceso editAdminVisibleUser {
	
	when
		accion = leer and
		administradorGr is visible
	return {leer}
	
	when
		administradorGr is visible
	return all
	
	when
		accion = leer and
		usuario is visible
	return {leer}
	
	else
		return {}
}
